{"code":"import { __awaiter } from \"tslib\";\r\nimport { EventEmitter } from 'events';\r\nimport { HandlerState } from \"@runtime/handler-state\";\r\nimport { MiddleWare } from \"@src/middleware\";\r\nimport { BaseException, CancelExecutionError } from \"@errors/base\";\r\nclass Runtime extends EventEmitter {\r\n    constructor(name, logger, successTransform, failedTransform) {\r\n        super();\r\n        this.name = name;\r\n        this.logger = logger;\r\n        this.success = successTransform;\r\n        this.fail = failedTransform;\r\n        this.middleWare = new MiddleWare(this.complete.bind(this));\r\n        this.state = new HandlerState(this.name, {}, {}, this.logger);\r\n    }\r\n    handler(handler) {\r\n        const self = this;\r\n        function handle(event, context, callback) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                self.state = new HandlerState(self.name, event, context, self.logger);\r\n                self.callback = callback;\r\n                return self.run(handler);\r\n            });\r\n        }\r\n        handle.bind(this);\r\n        return handle;\r\n    }\r\n    run(handler) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.middleWare.use((state) => __awaiter(this, void 0, void 0, function* () {\r\n                state.push({ response: yield handler(this.state) });\r\n            }));\r\n            try {\r\n                this.emit('enter', this.state);\r\n                yield this.middleWare.invoke(this.state);\r\n                this.emit('success', this.state);\r\n            }\r\n            catch (e) {\r\n                this.handleError(e);\r\n                this.emit('failure', this.state);\r\n            }\r\n            const result = this.closeLambda();\r\n            this.logger.close();\r\n            this.emit('exit', this.state);\r\n            return result;\r\n        });\r\n    }\r\n    handleError(error) {\r\n        if (this.checkCancellationError(error)) {\r\n            return;\r\n        }\r\n        if (this.checkApplicationError(error)) {\r\n            return;\r\n        }\r\n        this.state.push({\r\n            error: { message: error.message, error: error.toString() },\r\n        });\r\n    }\r\n    complete(err) {\r\n        if (err) {\r\n            throw err;\r\n        }\r\n    }\r\n    closeLambda() {\r\n        let result;\r\n        let err;\r\n        if (this.state.error) {\r\n            err = this.fail(this.state);\r\n        }\r\n        else {\r\n            result = this.success(this.state);\r\n        }\r\n        if (this.callback) {\r\n            this.callback(err, result);\r\n        }\r\n        return err || result;\r\n    }\r\n    checkCancellationError(error) {\r\n        if (error instanceof CancelExecutionError) {\r\n            this.state.push({ response: error.getResponse() });\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    checkApplicationError(error) {\r\n        if (error instanceof BaseException) {\r\n            this.state.push({ error: error.getResponse() });\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexport { Runtime };\r\n//# sourceMappingURL=runtime.js.map","references":["/home/bradodarb/_git/wavelength/wavelength-js/src/logging/util.ts","/home/bradodarb/_git/wavelength/wavelength-js/src/runtime/handler-state.ts","/home/bradodarb/_git/wavelength/wavelength-js/src/middleware/index.ts","/home/bradodarb/_git/wavelength/wavelength-js/src/errors/base.ts","/home/bradodarb/_git/wavelength/wavelength-js/src/util/type-utils.ts"],"map":"{\"version\":3,\"file\":\"runtime.js\",\"sourceRoot\":\"/\",\"sources\":[\"runtime/runtime.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/bradodarb/_git/wavelength/wavelength-js/runtime/runtime.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"node\" />\r\nimport { EventEmitter } from 'events';\r\nimport { ILogger } from \"@logging/util\";\r\nimport { HandlerState } from \"@runtime/handler-state\";\r\nimport { MiddleWare } from \"@src/middleware\";\r\nimport { ICallback } from \"@util/type-utils\";\r\ninterface IHandler<E, C> {\r\n    (event: E, context: C, callback?: ICallback): any;\r\n}\r\ninterface IRuntimeHandler<E, C> {\r\n    (state: HandlerState<E, C>): any;\r\n}\r\ninterface IResult<E, C, R> {\r\n    (state: HandlerState<E, C>): R;\r\n}\r\ndeclare class Runtime<E, C, S, F> extends EventEmitter {\r\n    name: string;\r\n    state: HandlerState<E, C>;\r\n    middleWare: MiddleWare<E, C>;\r\n    callback?: ICallback;\r\n    logger: ILogger;\r\n    success: IResult<E, C, S>;\r\n    fail: IResult<E, C, F>;\r\n    constructor(name: string, logger: ILogger, successTransform: IResult<E, C, S>, failedTransform: IResult<E, C, F>);\r\n    handler(handler: IRuntimeHandler<E, C>): IHandler<E, C>;\r\n    run(handler: IRuntimeHandler<E, C>): Promise<S | F | undefined>;\r\n    handleError(error: Error): void;\r\n    complete(err?: Error): void;\r\n    closeLambda(): S | F | undefined;\r\n    checkCancellationError(error: Error): boolean;\r\n    checkApplicationError(error: Error): boolean;\r\n}\r\nexport { Runtime, IResult, IRuntimeHandler, IHandler, ICallback };\r\n"}}
