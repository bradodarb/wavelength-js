{"code":"/**\r\n * @class\r\n * Specific error type to signal execution should immediately stop\r\n */\r\nclass CancelExecutionError extends Error {\r\n    getResponse() {\r\n        return {\r\n            cancelled: true,\r\n        };\r\n    }\r\n}\r\n/**\r\n * @class\r\n * Base level exception for expected errors\r\n */\r\nclass BaseException extends Error {\r\n    constructor(error, reason, code) {\r\n        super(error);\r\n        this.error = error;\r\n        this.reason = reason;\r\n        this.code = code;\r\n    }\r\n    getResponse() {\r\n        return {\r\n            error: {\r\n                message: String(this),\r\n                reason: this.reason,\r\n                code: this.code,\r\n            },\r\n        };\r\n    }\r\n}\r\nexport { BaseException, CancelExecutionError };\r\n//# sourceMappingURL=base.js.map","references":[],"map":"{\"version\":3,\"file\":\"base.js\",\"sourceRoot\":\"/\",\"sources\":[\"errors/base.ts\"],\"names\":[],\"mappings\":\"AAAA;;;GAGG;AACH,MAAM,oBAAqB,SAAQ,KAAK;IACtC,WAAW;QACT,OAAO;YACL,SAAS,EAAE,IAAI;SAChB,CAAC;IACJ,CAAC;CACF;AAED;;;GAGG;AACH,MAAM,aAAc,SAAQ,KAAK;IAK/B,YAAY,KAAY,EAAE,MAAa,EAAE,IAAkB;QACzD,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,WAAW;QACT,OAAO;YACL,KAAK,EAAE;gBACL,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB;SACF,CAAC;IACJ,CAAC;CACF;AAED,OAAO,EAAE,aAAa,EAAE,oBAAoB,EAAE,CAAC\"}","dts":{"name":"/home/bradodarb/_git/wavelength/wavelength-js/errors/base.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @class\r\n * Specific error type to signal execution should immediately stop\r\n */\r\ndeclare class CancelExecutionError extends Error {\r\n    getResponse(): {\r\n        cancelled: boolean;\r\n    };\r\n}\r\n/**\r\n * @class\r\n * Base level exception for expected errors\r\n */\r\ndeclare class BaseException extends Error {\r\n    error: string;\r\n    reason: string;\r\n    code: string | number;\r\n    constructor(error: string, reason: string, code: string | number);\r\n    getResponse(): {\r\n        error: {\r\n            message: string;\r\n            reason: string;\r\n            code: string | number;\r\n        };\r\n    };\r\n}\r\nexport { BaseException, CancelExecutionError };\r\n"}}
